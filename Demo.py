from langchain_openai import ChatOpenAI
import agent.agent as agent
import streamlit as st
import os

os.environ["DEEPSEEK_API_KEY"] = st.secrets["api_keys"]["deepseek"]
os.environ["TAVILY_API_KEY"] = st.secrets["api_keys"]["tavily"]

llm = ChatOpenAI(
    model="deepseek/deepseek-chat-v3-0324:free",
    temperature=0,
    base_url="https://openrouter.ai/api/v1",
    api_key=os.getenv("DEEPSEEK_API_KEY")
)

@st.cache_resource
def call_agent(company: str):
    agent_executor = agent.create_agent_executor(llm=llm)

    result = agent_executor.invoke(
        input={"input": agent.prompt.format_prompt(company=company.lower()}
    )

    return result["output"]

st.title("Company Research Tool")
st.header("üõ†Ô∏è Welcome to the LLM-Powered Company Research Tool!\n")

try:
    company = st.text_input("Enter a company name:")

    if st.button("üîé Research"):
        if not company:
            st.error("‚ùå Invalid Company Name!")
        else:
            with st.spinner("Researching Company... This may take a few minutes."):
                result = call_agent(company=company)
            
            st.success(f"‚úÖ Company Successfully Researched!")
            st.markdown(result)
            st.warning("‚ö†Ô∏è This response is generated by AI and may contain inaccuracies. Use at your own risk.")
except Exception as e:
    st.error("‚ùå An error has occured. Please come back later.")
    print(e)
